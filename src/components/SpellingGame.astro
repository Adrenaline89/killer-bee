---
---

<div class="game-container">
    <div class="word-display"></div>
    <input type="text" class="word-input" placeholder="Type the word here..." />
    <button class="submit-btn">Check</button>
    <div class="result"></div>
</div>

<script>
    const wordLists = {
        easy: ["apple", "table", "happy"],
        medium: ["journey", "whistle", "puzzle"],
        hard: ["surveillance", "bureaucracy", "idiosyncrasy"]
    };

    // Initialize or load words from localStorage
    if (!localStorage.getItem('wordLists')) {
        localStorage.setItem('wordLists', JSON.stringify(wordLists));
    }

    const wrongWords = new Set();
    const difficulty = sessionStorage.getItem('selectedDifficulty') || 'easy';
    const storedWordLists = localStorage.getItem('wordLists') || JSON.stringify(wordLists);
    const words = JSON.parse(storedWordLists)[difficulty];
    
    let currentWord = '';
    let currentIndex = -1;
    
    const input = document.querySelector('.word-input') as HTMLInputElement;
    const display = document.querySelector('.word-display') as HTMLElement;
    const result = document.querySelector('.result') as HTMLElement;
    const submitBtn = document.querySelector('.submit-btn') as HTMLButtonElement;

    // Ensure all DOM elements are available
    if (!input || !display || !result || !submitBtn) {
        console.error('Required DOM elements not found');
        return;
    }

    function getNextWord() {
        currentIndex = Math.floor(Math.random() * words.length);
        currentWord = words[currentIndex];
        display.textContent = currentWord;
        setTimeout(() => {
            display.textContent = '?????';
        }, 1000);
        input.value = '';
        result.textContent = '';
    }

    function checkSpelling() {
        const userInput = input.value.trim().toLowerCase();
        if (userInput === currentWord) {
            result.textContent = 'ðŸ˜Š Correct!';
            result.style.color = '#4CAF50';
        } else {
            result.textContent = 'ðŸ˜ž Wrong! The word was: ' + currentWord;
            result.style.color = '#f44336';
            wrongWords.add(currentWord);
        }
        setTimeout(getNextWord, 2000);
    }

    submitBtn.addEventListener('click', checkSpelling);
    input.addEventListener('keyup', (e) => {
        if (e.key === 'Enter') {
            checkSpelling();
        }
    });

    // Start the game
    getNextWord();
</script>

<style>
    .game-container {
        background: white;
        padding: 2rem;
        border-radius: 12px;
        box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
    }

    .word-display {
        font-size: 2rem;
        margin-bottom: 1rem;
        text-align: center;
    }

    .word-input {
        width: 100%;
        padding: 1rem;
        font-size: 1.2rem;
        border: 2px solid #FFD700;
        border-radius: 6px;
        margin-bottom: 1rem;
    }

    .result {
        font-size: 3rem;
        text-align: center;
    }

    .submit-btn {
        width: 100%;
        padding: 1rem;
        background: #FFD700;
        border: none;
        border-radius: 6px;
        font-size: 1.2rem;
        cursor: pointer;
        margin: 1rem 0;
    }
</style>
